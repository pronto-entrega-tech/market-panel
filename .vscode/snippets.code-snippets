{
  "Create function": {
    "scope": "typescript,typescriptreact",
    "prefix": ["arrow-function", "fn"],
    "body": ["const $1 = () => "],
  },
  "Create react component": {
    "scope": "typescriptreact",
    "prefix": ["react-component", "rc"],
    "body": [
      "const ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/} = () => {",
      "  return (",
      "    ",
      "  )",
      "}",
      "",
      "export default ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/};",
    ],
  },
  "Create styled component": {
    "scope": "typescript",
    "prefix": ["styled-component", "sc"],
    "body": [
      "import styled from 'styled-components';",
      "import * as mui from '@mui/material';",
      "",
      "export const Container = styled.div``",
    ],
  },
  "Create useState": {
    "scope": "typescriptreact",
    "prefix": ["use-state", "us"],
    "body": ["const [state, setState] = useState();"],
  },
  "Create useEffect": {
    "scope": "typescriptreact",
    "prefix": ["use-effect", "ue"],
    "body": ["useEffect(() => {", "", "}, [])"],
  },
  "Create context": {
    "scope": "typescriptreact",
    "prefix": ["context"],
    "body": [
      "import { useState, useCallback } from 'react';",
      "import { createContext } from '~/contexts/createContext';",
      "",
      "function use${TM_FILENAME_BASE/Context/$1/}() {",
      "  return {};",
      "};",
      "",
      "export const [${TM_FILENAME_BASE/Context/$1/}Provider, use${TM_FILENAME_BASE}, use${TM_FILENAME_BASE}Selector] = createContext(use${TM_FILENAME_BASE/Context/$1/});",
    ],
  },
}
